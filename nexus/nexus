#!/system/bin/sh

sprop=/data/adb/modules/nexus/system.prop
mod_xcharge=/data/adb/modules/XCM/system/bin/xcharge
mod_kill3=/data/adb/modules/Kill3/system/bin/kill3

case $1 in
	0)
	val=battery
	echo $val
	if [ -e $mod_xcharge ] && [ "$(getprop nex.profile)" == "2" ]; then
	resetprop xcharge $(getprop xc_mode)
	fi
	resetprop nex.profile 0
	sed -i '/nex.profile=/s/.*/nex.profile=0/' $sprop
	;;
	1)
	val=effient
	echo $val
	if [ -e $mod_xcharge ] && [ "$(getprop nex.profile)" == "2" ]; then
	resetprop xcharge $(getprop xc_mode)
	fi
	resetprop nex.profile 1
	sed -i '/nex.profile=/s/.*/nex.profile=1/' $sprop
	;;
	2)
	val=gaming
	echo $val
	# slow charging in game mode
	if [ -e $mod_xcharge ] && [ "$(getprop nex.xc)" == "1" ]; then
	setprop xc_mode $(getprop xcharge)
	resetprop xcharge slow
	# use same profile after reboot
	sed -i '/nex.xc=/s/.*/nex.xc=1/' $sprop
	else
	sed -i '/nex.xc=/s/.*/nex.xc=0/' $sprop
	fi
	resetprop nex.profile 2
	sed -i '/nex.profile=/s/.*/nex.profile=2/' $sprop
	;;
esac

# Since we gonna check lots of files existence
# usage: nex path/filename bb_value ef_value gm_value
function nex () {
	if [ -e $1 -a -w $1 ]; then
	case $val in
	battery)
	echo $2 > $1
	;;
	effient)
	echo $3 > $1
	;;
	gaming)
	echo $4 > $1
	;;
	esac
	fi
}

# drop ram cache ( clear pagecache, dentries, and inodes )
if [ $1 == 2 ]; then
echo 3 > /proc/sys/vm/drop_caches
fi

# kprofile
nex /sys/module/kprofiles/parameters/kp_mode 1 2 3

# Kernel
nex /proc/sys/kernel/sched_child_runs_first 1 0 0
nex /proc/sys/kernel/timer_migration 1 0 0
nex /proc/sys/kernel/perf_cpu_time_max_percent 90 15 15
nex /proc/sys/kernel/sched_latency_ns 6000000 10000000 10000000
nex /proc/sys/kernel/sched_min_granularity_ns 750000 1250000 2000000
nex /proc/sys/kernel/sched_wakeup_granularity_ns 3000000 5000000 5000000
nex /proc/sys/kernel/sched_migration_cost_ns 1000000 1000000 2000000
nex /proc/sys/kernel/sched_nr_migrate 32 64 128
nex /proc/sys/kernel/sched_autogroup_enabled 1 1 0

# Fs
nex /proc/sys/fs/lease-break-time 50 25 5

# VM
nex /proc/sys/vm/stat_interval 20 10 1
nex /proc/sys/vm/vfs_cache_pressure 100 50 20
nex /proc/sys/vm/swappiness 60 75 100

# Stuneboost
nex /dev/stune/top-app/schedtune.boost 5 5 50
nex /dev/stune/foreground/schedtune.boost 0 1 45
nex /dev/stune/top-app/schedtune.prefer_idle 1 1 1

# EAS
nex /proc/sys/kernel/sched_energy_aware 1 0 0

# CPU
nex /sys/module/cpu_input_boost/parameters/input_boost_duration 0 64 128

# spi CRC
nex /sys/module/mmc_core/parameters/use_spi_crc 1 0 0

# GPU
nex /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost 0 0 3

# adreno idler
if [ -e /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost -a $1 == 2 ]; then
echo 0 > /sys/module/adreno_idler/parameters/adreno_idler_active
else
nex /sys/module/adreno_idler/parameters/adreno_idler_active 1 1 1
nex /sys/module/adreno_idler/parameters/adreno_idler_downdifferential 64 20 64
nex /sys/module/adreno_idler/parameters/adreno_idler_idlewait 5 25 64
nex /sys/module/adreno_idler/parameters/adreno_idler_idleworkload 7000 4000 64
fi

nex /sys/class/kgsl/kgsl-3d0/devfreq/polling_interval 16 8 4

nex /sys/class/kgsl/kgsl-3d0/throttling 1 0 0
nex /sys/class/kgsl/kgsl-3d0/force_clk_on 0 1 1
nex /sys/class/kgsl/kgsl-3d0/force_bus_on 0 1 1
nex /sys/class/kgsl/kgsl-3d0/force_rail_on 0 1 1
nex /sys/class/kgsl/kgsl-3d0/force_no_nap 0 1 1
nex /sys/class/kgsl/kgsl-3d0/bus_split 1 0 0

nex /sys/class/kgsl/kgsl-3d0/dispatch/inflight 15 20 25
nex /sys/class/kgsl/kgsl-3d0/dispatch/inflight_low_latency 4 5 5

# Schedutil Bess
for cpu in /sys/devices/system/cpu/*/cpufreq/schedutil
do
nex "${cpu}"/up_rate_limit_us 20000 500 400
nex "${cpu}"/down_rate_limit_us 500 20000 30000
nex "${cpu}"/iowait_boost_enable 0 1 1
done

# Block
for queue in /sys/block/*/queue
do
nex "${queue}"/nr_requests 128 32 64
nex 2 > "${queue}"/rq_affinity 0 2 2
nex 2 > "${queue}"/nomerges 0 0 2
done

# change freq according profile
ulc=$(getprop uc_freq_lc) && ubc=$(getprop uc_freq_bc) && upc=$(getprop uc_freq_pc)
olc=$(getprop oc_freq_lc) && obc=$(getprop oc_freq_bc) && opc=$(getprop uc_freq_pc)

nex /sys/devices/system/cpu/cpufreq/policy0/scaling_max_freq $ulc $olc $olc
nex /sys/devices/system/cpu/cpufreq/policy4/scaling_max_freq $ubc $obc $obc
nex /sys/devices/system/cpu/cpufreq/policy6/scaling_max_freq $ubc $obc $obc
nex /sys/devices/system/cpu/cpufreq/policy7/scaling_max_freq $upc $opc $opc

# Only clear pagecache + kill some bg services and 3rd party apps
if [ $1 == 2 ]; then
echo 1 > /proc/sys/vm/drop_caches
am kill-all
if [ -e $mod_kill3 ] && [ "$(getprop nex.kill3)" == "1" ]; then
su -c kill3
fi
fi


